{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-10-08T19:10:01.439929Z", "invocation_id": "7a880e1b-d428-4c33-a852-078dd34c0b94", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:44.116570Z", "completed_at": "2025-10-08T19:09:44.141147Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:44.142478Z", "completed_at": "2025-10-08T19:09:51.861523Z"}], "thread_id": "Thread-1", "execution_time": 7.748924732208252, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_instacart.g1_stg_insta_orders", "compiled": true, "compiled_code": "\n\n-- Clean layer: Orders table\n-- Purpose: Standardize data types and preserve NaN values for numeric continuity.\n-- Primary Key: order_id\n-- Foreign Key: user_id \u2192 g1_stg_insta_users.user_id\n\nselect\n  cast(order_id as Int64)               as order_id,\n  cast(user_id as Int64)                as user_id,\n  cast(eval_set as String)              as eval_set,\n  cast(order_number as Int64)           as order_number,\n  cast(order_dow as Int64)              as order_dow,\n  cast(order_hour_of_day as Int64)      as order_hour_of_day,\n  cast(days_since_prior_order as Float64) as days_since_prior_order\nfrom `raw`.`raw___insta_orders`", "relation_name": "`clean`.`g1_stg_insta_orders`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:52.068090Z", "completed_at": "2025-10-08T19:09:52.116899Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:52.186530Z", "completed_at": "2025-10-08T19:09:52.869621Z"}], "thread_id": "Thread-1", "execution_time": 0.9393889904022217, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_orders_eval_set.5b1e98eee7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect eval_set\nfrom `clean`.`g1_stg_insta_orders`\nwhere eval_set is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:52.878864Z", "completed_at": "2025-10-08T19:09:52.893113Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:52.894510Z", "completed_at": "2025-10-08T19:09:53.236724Z"}], "thread_id": "Thread-1", "execution_time": 0.3606133460998535, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_orders_order_dow.9c58aec240", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_dow\nfrom `clean`.`g1_stg_insta_orders`\nwhere order_dow is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:53.246208Z", "completed_at": "2025-10-08T19:09:53.258661Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:53.259885Z", "completed_at": "2025-10-08T19:09:53.570905Z"}], "thread_id": "Thread-1", "execution_time": 0.32761120796203613, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_orders_order_hour_of_day.a24ef46576", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_hour_of_day\nfrom `clean`.`g1_stg_insta_orders`\nwhere order_hour_of_day is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:53.581868Z", "completed_at": "2025-10-08T19:09:53.592725Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:53.593999Z", "completed_at": "2025-10-08T19:09:53.894203Z"}], "thread_id": "Thread-1", "execution_time": 0.31598424911499023, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_orders_order_id.db2c429600", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `clean`.`g1_stg_insta_orders`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:53.904429Z", "completed_at": "2025-10-08T19:09:53.915870Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:53.917108Z", "completed_at": "2025-10-08T19:09:54.246918Z"}], "thread_id": "Thread-1", "execution_time": 0.3452486991882324, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_orders_order_number.f87f132619", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_number\nfrom `clean`.`g1_stg_insta_orders`\nwhere order_number is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:54.258274Z", "completed_at": "2025-10-08T19:09:54.270653Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:54.274091Z", "completed_at": "2025-10-08T19:09:54.608146Z"}], "thread_id": "Thread-1", "execution_time": 0.353503942489624, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_orders_user_id.ce8c0e7d64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `clean`.`g1_stg_insta_orders`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:54.623370Z", "completed_at": "2025-10-08T19:09:54.653398Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:54.655906Z", "completed_at": "2025-10-08T19:09:55.230024Z"}], "thread_id": "Thread-1", "execution_time": 0.6112337112426758, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.unique_g1_stg_insta_orders_order_id.fad103cb57", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom `clean`.`g1_stg_insta_orders`\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:51.980611Z", "completed_at": "2025-10-08T19:09:52.106583Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:52.111497Z", "completed_at": "2025-10-08T19:09:56.306839Z"}], "thread_id": "Thread-4", "execution_time": 4.3983073234558105, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.accepted_values_g1_stg_insta_orders_order_dow__0__1__2__3__4__5__6.ec9bf99145", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_dow as value_field,\n        count(*) as n_records\n\n    from `clean`.`g1_stg_insta_orders`\n    group by order_dow\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '0','1','2','3','4','5','6'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:52.014284Z", "completed_at": "2025-10-08T19:09:52.110034Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:52.167606Z", "completed_at": "2025-10-08T19:09:56.312076Z"}], "thread_id": "Thread-2", "execution_time": 4.39292311668396, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.accepted_values_g1_stg_insta_orders_order_hour_of_day__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15__16__17__18__19__20__21__22__23.b52ff00dc1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        order_hour_of_day as value_field,\n        count(*) as n_records\n\n    from `clean`.`g1_stg_insta_orders`\n    group by order_hour_of_day\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:51.922884Z", "completed_at": "2025-10-08T19:09:52.108446Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:52.132895Z", "completed_at": "2025-10-08T19:09:56.578621Z"}], "thread_id": "Thread-3", "execution_time": 4.691044330596924, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.accepted_values_g1_stg_insta_orders_eval_set__prior__train__test.ace370e4f5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        eval_set as value_field,\n        count(*) as n_records\n\n    from `clean`.`g1_stg_insta_orders`\n    group by eval_set\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'prior','train','test'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:56.590478Z", "completed_at": "2025-10-08T19:09:56.599744Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:56.601505Z", "completed_at": "2025-10-08T19:09:58.247891Z"}], "thread_id": "Thread-1", "execution_time": 1.6605448722839355, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_instacart.g1_stg_insta_users", "compiled": true, "compiled_code": "\n\n-- Clean layer: Users table  \n-- Purpose: Normalize and standardize distinct users extracted from orders.  \n-- Primary Key: user_id  \n-- Foreign Key: None (referenced by orders.user_id)\n\nselect distinct\n  cast(user_id as Int64) as user_id\nfrom `clean`.`g1_stg_insta_orders`", "relation_name": "`clean`.`g1_stg_insta_users`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:58.277083Z", "completed_at": "2025-10-08T19:09:58.325545Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:58.330042Z", "completed_at": "2025-10-08T19:09:58.667557Z"}], "thread_id": "Thread-2", "execution_time": 0.40145397186279297, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.not_null_g1_stg_insta_users_user_id.34caa3f935", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `clean`.`g1_stg_insta_users`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:58.307093Z", "completed_at": "2025-10-08T19:09:58.335360Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:58.346836Z", "completed_at": "2025-10-08T19:09:58.727745Z"}], "thread_id": "Thread-4", "execution_time": 0.4575033187866211, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.unique_g1_stg_insta_users_user_id.2fd469966f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom `clean`.`g1_stg_insta_users`\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:58.288041Z", "completed_at": "2025-10-08T19:09:58.328143Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:58.339284Z", "completed_at": "2025-10-08T19:09:59.139666Z"}], "thread_id": "Thread-3", "execution_time": 0.871614933013916, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_instacart.relationships_g1_stg_insta_orders_user_id__user_id__ref_g1_stg_insta_users_.e8cd2e2726", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select user_id as from_field\n    from `clean`.`g1_stg_insta_orders`\n    where user_id is not null\n),\n\nparent as (\n    select user_id as to_field\n    from `clean`.`g1_stg_insta_users`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n-- end_of_sql\nsettings join_use_nulls = 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:59.213938Z", "completed_at": "2025-10-08T19:09:59.244053Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:59.353784Z", "completed_at": "2025-10-08T19:09:59.785153Z"}], "thread_id": "Thread-3", "execution_time": 0.6152679920196533, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_instacart.g1_dq_insta_users_summary", "compiled": true, "compiled_code": "\n\n-- Data Quality Summary for Users\n\nwith \nrawDs as (\n    select count(distinct user_id) as row_count_raw\n    from `raw`.`raw___insta_orders`\n),\ncln as (\n    select * from `clean`.`g1_stg_insta_users`\n),\ncounts_clean as (\n    select count(*) as row_count_clean from cln\n),\nnulls as (\n    select round(100.0 * countIf(user_id is null) / nullif(count(),0), 2) as null_pct_user_id\n    from cln\n),\ndupes as (\n    select countIf(cnt > 1) as duplicate_user_ids\n    from (\n        select user_id, count() as cnt\n        from cln\n        group by user_id\n    )\n),\ninvalid_users as (\n    select count(*) as invalid_user_in_orders\n    from `clean`.`g1_stg_insta_orders`\n    where user_id not in (select user_id from cln)\n),\nusers_without_orders as (\n    select count(*) as user_without_orders\n    from cln\n    where user_id not in (select user_id from `clean`.`g1_stg_insta_orders`)\n)\n\nselect \n    r.row_count_raw,\n    c.row_count_clean,\n    (r.row_count_raw - c.row_count_clean) as dropped_rows,\n    n.null_pct_user_id,\n    d.duplicate_user_ids,\n    iu.invalid_user_in_orders,\n    uwo.user_without_orders\nfrom (select * from rawDs) r\ncross join (select * from counts_clean) c\ncross join (select * from nulls) n\ncross join (select * from dupes) d\ncross join (select * from invalid_users) iu\ncross join (select * from users_without_orders) uwo", "relation_name": "`mart`.`g1_dq_insta_users_summary`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:59.193266Z", "completed_at": "2025-10-08T19:09:59.236340Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:59.294030Z", "completed_at": "2025-10-08T19:10:01.383296Z"}], "thread_id": "Thread-2", "execution_time": 2.2176313400268555, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_instacart.g1_dq_insta_orders_summary", "compiled": true, "compiled_code": "\n\n-- Data Quality Summary for Orders\n-- Tracks: row counts, null %, duplicates, referential integrity, value ranges\n\nwith rawDs as (\n  select * from `raw`.`raw___insta_orders`\n),\n\ncln as (\n  select * from `clean`.`g1_stg_insta_orders`\n),\n\n-- Row Count Comparison\ncounts as (\n  select\n    (select count() from rawDs)  as row_count_raw,\n    (select count() from cln)    as row_count_clean\n),\n\n-- Null Percentage Check\nnulls as (\n  select\n    round(100.0 * countIf(order_id is null) / nullif(count(),0), 2) as null_pct_order_id,\n    round(100.0 * countIf(user_id is null) / nullif(count(),0), 2) as null_pct_user_id,\n    round(100.0 * countIf(eval_set is null) / nullif(count(),0), 2) as null_pct_eval_set,\n    round(100.0 * countIf(order_number is null) / nullif(count(),0), 2) as null_pct_order_number,\n    round(100.0 * countIf(order_dow is null) / nullif(count(),0), 2) as null_pct_order_dow,\n    round(100.0 * countIf(order_hour_of_day is null) / nullif(count(),0), 2) as null_pct_order_hour_of_day,\n    round(100.0 * countIf(days_since_prior_order is null) / nullif(count(),0), 2) as null_pct_days_since_prior_order\n  from cln\n),\n\n-- Duplicate Orders\ndupes as (\n  select\n    countIf(cnt > 1) as duplicate_orders\n  from (\n    select order_id, count() as cnt\n    from cln\n    group by order_id\n  )\n),\n\n-- Referential Integrity\nreferential_integrity as (\n  select\n    countIf(o.user_id not in (select distinct user_id from `clean`.`g1_stg_insta_users`)) as invalid_user_id\n  from `clean`.`g1_stg_insta_orders` o\n),\n\n-- Value Range Checks\nvalue_ranges as (\n  select\n    countIf(order_number < 1) as invalid_order_number,\n    countIf(order_hour_of_day < 0 or order_hour_of_day > 23) as invalid_order_hour,\n    countIf(days_since_prior_order < 0 or days_since_prior_order > 30) as invalid_days_since_prior_order\n  from cln\n),\n\n-- Join all metrics\njoined as (\n    select\n        counts.row_count_raw,\n        counts.row_count_clean,\n        (counts.row_count_raw - counts.row_count_clean) as dropped_rows,\n        nulls.*,\n        dupes.duplicate_orders,\n        referential_integrity.invalid_user_id,\n        value_ranges.invalid_order_number,\n        value_ranges.invalid_order_hour,\n        value_ranges.invalid_days_since_prior_order\n    from counts\n    cross join nulls\n    cross join dupes\n    cross join referential_integrity\n    cross join value_ranges\n)\n\nselect * from joined", "relation_name": "`mart`.`g1_dq_insta_orders_summary`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:59.181228Z", "completed_at": "2025-10-08T19:09:59.226957Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:59.231202Z", "completed_at": "2025-10-08T19:10:01.388913Z"}], "thread_id": "Thread-1", "execution_time": 2.225407838821411, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_instacart.g1_dq_insta_orders_anomalies", "compiled": true, "compiled_code": "\n\n-- Row-level Data Quality Violations for Orders\nwith cln as (\n  -- Source cleaned orders data\n  select * \n  from `clean`.`g1_stg_insta_orders`\n),\n\nusers as (\n  -- Reference users table for FK validation\n  select user_id \n  from `clean`.`g1_stg_insta_users`\n),\n\nviolations as (\n  select\n    order_id,\n    user_id,\n    eval_set,\n    order_number,\n    order_dow,\n    order_hour_of_day,\n    days_since_prior_order,\n\n    -- Data Quality Issue Classification\n    multiIf(\n      order_id is null, 'null_order_id',\n      user_id is null, 'null_user_id',\n      user_id not in (select user_id from users), 'missing_user_ref',\n      order_number < 1, 'invalid_order_number',\n      order_dow not in (0,1,2,3,4,5,6), 'invalid_order_dow',\n      order_hour_of_day < 0 or order_hour_of_day > 23, 'invalid_order_hour',\n      days_since_prior_order < 0, 'negative_days_since_prior_order',\n      'ok'\n    ) as dq_issue\n\n  from cln\n)\n\n-- Return only rows with detected anomalies\nselect *\nfrom violations\nwhere dq_issue != 'ok'\nlimit 100", "relation_name": "`mart`.`g1_dq_insta_orders_anomalies`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T19:09:59.205613Z", "completed_at": "2025-10-08T19:09:59.229261Z"}, {"name": "execute", "started_at": "2025-10-08T19:09:59.259976Z", "completed_at": "2025-10-08T19:10:01.393924Z"}], "thread_id": "Thread-4", "execution_time": 2.2262206077575684, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_instacart.g1_dq_insta_users_anomalies", "compiled": true, "compiled_code": "\n\n-- Row-level Data Quality Violations for Users\n\nwith cln as (\n  select * from `clean`.`g1_stg_insta_users`\n),\nviolations as (\n  select\n    user_id,\n\n    multiIf(\n      user_id is null, 'null_user_id',\n      user_id <= 0, 'invalid_user_id',\n      'ok'\n    ) as dq_issue\n  from cln\n)\nselect *\nfrom violations\nwhere dq_issue != 'ok'\nlimit 100", "relation_name": "`mart`.`g1_dq_insta_users_anomalies`"}], "elapsed_time": 23.656338214874268, "args": {"use_colors": true, "export_saved_queries": false, "invocation_command": "dbt build --profiles-dir . --target remote", "exclude_resource_types": [], "select": [], "include_saved_query": false, "log_level": "info", "introspect": true, "enable_legacy_logger": false, "favor_state": false, "log_level_file": "debug", "log_path": "/workdir/transforms/01_instacart/logs", "log_format_file": "debug", "target": "remote", "show_resource_report": false, "vars": {}, "macro_debugging": false, "log_format": "default", "send_anonymous_usage_stats": true, "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "empty": false, "defer": false, "profiles_dir": ".", "static_parser": true, "print": true, "log_file_max_bytes": 10485760, "resource_types": [], "exclude": [], "require_resource_names_without_spaces": false, "write_json": true, "cache_selected_only": false, "source_freshness_run_project_hooks": false, "which": "build", "partial_parse": true, "strict_mode": false, "partial_parse_file_diff": true, "indirect_selection": "eager", "show": false, "version_check": true, "project_dir": "/workdir/transforms/01_instacart", "quiet": false, "require_explicit_package_overrides_for_builtin_materializations": true, "populate_cache": true, "printer_width": 80}}