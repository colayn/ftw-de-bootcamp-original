{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-10-07T05:55:57.721203Z", "invocation_id": "4a0b1a88-dd09-4496-bc49-421fc8c8c476", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.617315Z", "completed_at": "2025-10-07T05:55:57.636987Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.638783Z", "completed_at": "2025-10-07T05:55:57.638800Z"}], "thread_id": "Thread-1", "execution_time": 0.025418996810913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ex_01_mpg.cylinders_by_origin_layn", "compiled": true, "compiled_code": "\n\nselect\n  origin,\n  avg(cylinders) as avg_cylinders,\n  count()        as n\nfrom `clean`.`mpg_standardized_layn`\ngroup by origin", "relation_name": "`mart`.`cylinders_by_origin_layn`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.625716Z", "completed_at": "2025-10-07T05:55:57.637912Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.640056Z", "completed_at": "2025-10-07T05:55:57.640064Z"}], "thread_id": "Thread-2", "execution_time": 0.02536320686340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ex_01_mpg.dq_mpg_anomalies_layn", "compiled": true, "compiled_code": "\n\n-- Row-level drilldown of \u201cobviously wrong\u201d records based on simple rules.\n-- LIMIT for demo-friendliness; remove in real pipelines.\n\nwith cln as (\n  select * from `clean`.`mpg_standardized_layn`\n),\nviolations as (\n  select\n    -- NOTE: this dataset has no native PK; include a synthetic row_number if needed.\n    -- ClickHouse: use monotonicallyIncreasingId() isn't stable; we\u2019ll show columns directly.\n    mpg, cylinders, displacement, horsepower, weight, acceleration, model_year, origin, make,\n\n    multiIf(\n      mpg <= 0,                      'nonpositive_mpg',\n      displacement <= 0,             'nonpositive_displacement',\n      weight <= 0,                   'nonpositive_weight',\n      acceleration <= 0,             'nonpositive_acceleration',\n      cylinders not in (3,4,5,6,8),  'invalid_cylinders',\n      lower(origin) not in ('usa','europe','japan'), 'invalid_origin',\n      model_year < 70 or model_year > 82, 'out_of_range_model_year',\n      horsepower is null,            'null_horsepower',\n      'ok'\n    ) as dq_issue\n  from cln\n)\nselect *\nfrom violations\nwhere dq_issue != 'ok'\nlimit 50", "relation_name": "`mart`.`dq_mpg_anomalies_layn`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.629446Z", "completed_at": "2025-10-07T05:55:57.638315Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.640790Z", "completed_at": "2025-10-07T05:55:57.640796Z"}], "thread_id": "Thread-3", "execution_time": 0.024952411651611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ex_01_mpg.dq_mpg_summary_layn", "compiled": true, "compiled_code": "\n\nwith src as (\n  select * from `raw`.`autompg___cars_layn`\n),\n\ncln as (\n  select * from `clean`.`mpg_standardized_layn`\n),\n\ncounts as (\n  select\n    (select count() from src)  as row_count_raw,\n    (select count() from cln)  as row_count_clean\n),\nnulls as (\n  select\n    round(100.0 * countIf(horsepower is null) / nullif(count(),0), 2) as pct_null_horsepower\n  from cln\n),\ndomains as (\n  select\n    -- cylinders domain: {3,4,5,6,8}\n    countIf(cylinders not in (3,4,5,6,8)) as invalid_cylinders,\n    -- origin domain: {\"usa\",\"europe\",\"japan\"} (case-insensitive trim assumed in clean)\n    countIf(lower(origin) not in ('usa','europe','japan')) as invalid_origin\n  from cln\n),\nbounds as (\n  select\n    countIf(mpg <= 0)           as nonpositive_mpg,\n    countIf(displacement <= 0)  as nonpositive_displacement,\n    countIf(weight <= 0)        as nonpositive_weight,\n    countIf(acceleration <= 0)  as nonpositive_acceleration,\n    -- UCI Auto MPG years are 70..82 (1970..1982) in this dataset\n    countIf(model_year < 70 or model_year > 82) as out_of_range_model_year\n  from cln\n),\njoined as (\n  select\n    counts.row_count_raw,\n    counts.row_count_clean,\n    (counts.row_count_raw - counts.row_count_clean) as dropped_rows,\n\n    nulls.pct_null_horsepower,\n\n    domains.invalid_cylinders,\n    domains.invalid_origin,\n\n    bounds.nonpositive_mpg,\n    bounds.nonpositive_displacement,\n    bounds.nonpositive_weight,\n    bounds.nonpositive_acceleration,\n    bounds.out_of_range_model_year\n  from counts\n  cross join nulls\n  cross join domains\n  cross join bounds\n)\n\nselect * from joined", "relation_name": "`mart`.`dq_mpg_summary_layn`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.633770Z", "completed_at": "2025-10-07T05:55:57.639551Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.641757Z", "completed_at": "2025-10-07T05:55:57.641771Z"}], "thread_id": "Thread-4", "execution_time": 0.025371551513671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ex_01_mpg.mpg_standardized_layn", "compiled": true, "compiled_code": "\n\n-- Source columns are already Nullable with correct types.\n-- Keep them as-is to preserve nullability and avoid insert errors.\n\nselect\n  toFloat64(mpg)          as mpg,\n  toInt32(cylinders)      as cylinders,\n  toFloat64(displacement) as displacement,\n  CAST(horsepower AS Nullable(Float64)) as horsepower,\n  toInt32(weight)         as weight,\n  toFloat64(acceleration) as acceleration,\n  toInt32(model_year)     as model_year,\n  trim(origin)                  as origin,\n  trim(name)                    as make\nfrom `raw`.`autompg___cars_layn`\n-- where horsepower is not null\n  -- and isFinite(horsepower)", "relation_name": "`clean`.`mpg_standardized_layn`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.648146Z", "completed_at": "2025-10-07T05:55:57.663985Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.668989Z", "completed_at": "2025-10-07T05:55:57.669001Z"}], "thread_id": "Thread-1", "execution_time": 0.024829626083374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.accepted_values_cylinders_by_origin_layn_origin__usa__europe__japan.640044014d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        origin as value_field,\n        count(*) as n_records\n\n    from `mart`.`cylinders_by_origin_layn`\n    group by origin\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'usa','europe','japan'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.652712Z", "completed_at": "2025-10-07T05:55:57.668560Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.670369Z", "completed_at": "2025-10-07T05:55:57.670377Z"}], "thread_id": "Thread-2", "execution_time": 0.024488449096679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_cylinders_by_origin_layn_origin.ef65dbbe30", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect origin\nfrom `mart`.`cylinders_by_origin_layn`\nwhere origin is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.660725Z", "completed_at": "2025-10-07T05:55:57.670024Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.672157Z", "completed_at": "2025-10-07T05:55:57.672163Z"}], "thread_id": "Thread-3", "execution_time": 0.025400876998901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.accepted_values_mpg_standardized_layn_cylinders__3__4__5__6__8.3d97a636fc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        cylinders as value_field,\n        count(*) as n_records\n\n    from `clean`.`mpg_standardized_layn`\n    group by cylinders\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '3','4','5','6','8'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.664724Z", "completed_at": "2025-10-07T05:55:57.671237Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.673309Z", "completed_at": "2025-10-07T05:55:57.673316Z"}], "thread_id": "Thread-4", "execution_time": 0.026122331619262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.accepted_values_mpg_standardized_layn_origin__usa__europe__japan.e5ae48e965", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        origin as value_field,\n        count(*) as n_records\n\n    from `clean`.`mpg_standardized_layn`\n    group by origin\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'usa','europe','japan'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.677756Z", "completed_at": "2025-10-07T05:55:57.689006Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.694386Z", "completed_at": "2025-10-07T05:55:57.694397Z"}], "thread_id": "Thread-1", "execution_time": 0.020464658737182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_acceleration.6729888c36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect acceleration\nfrom `clean`.`mpg_standardized_layn`\nwhere acceleration is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.681733Z", "completed_at": "2025-10-07T05:55:57.693800Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.695833Z", "completed_at": "2025-10-07T05:55:57.695842Z"}], "thread_id": "Thread-2", "execution_time": 0.02074265480041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_cylinders.72af77a083", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cylinders\nfrom `clean`.`mpg_standardized_layn`\nwhere cylinders is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.685479Z", "completed_at": "2025-10-07T05:55:57.695331Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.697436Z", "completed_at": "2025-10-07T05:55:57.697443Z"}], "thread_id": "Thread-3", "execution_time": 0.020940065383911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_displacement.84b4bbf1f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect displacement\nfrom `clean`.`mpg_standardized_layn`\nwhere displacement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.689438Z", "completed_at": "2025-10-07T05:55:57.696542Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.698623Z", "completed_at": "2025-10-07T05:55:57.698630Z"}], "thread_id": "Thread-4", "execution_time": 0.02135920524597168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_model_year.b71a32efe3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect model_year\nfrom `clean`.`mpg_standardized_layn`\nwhere model_year is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.702345Z", "completed_at": "2025-10-07T05:55:57.714543Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.715478Z", "completed_at": "2025-10-07T05:55:57.715488Z"}], "thread_id": "Thread-1", "execution_time": 0.016316652297973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_mpg.ebe1059bd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mpg\nfrom `clean`.`mpg_standardized_layn`\nwhere mpg is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.707449Z", "completed_at": "2025-10-07T05:55:57.715009Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.716303Z", "completed_at": "2025-10-07T05:55:57.716310Z"}], "thread_id": "Thread-2", "execution_time": 0.01618170738220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_origin.da22bc11ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect origin\nfrom `clean`.`mpg_standardized_layn`\nwhere origin is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-07T05:55:57.711047Z", "completed_at": "2025-10-07T05:55:57.716926Z"}, {"name": "execute", "started_at": "2025-10-07T05:55:57.717615Z", "completed_at": "2025-10-07T05:55:57.717621Z"}], "thread_id": "Thread-3", "execution_time": 0.01644134521484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_layn_weight.10a2447c81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect weight\nfrom `clean`.`mpg_standardized_layn`\nwhere weight is null\n\n\n", "relation_name": null}], "elapsed_time": 0.669750452041626, "args": {"log_file_max_bytes": 10485760, "invocation_command": "dbt docs generate --profiles-dir . --target local --static", "write_json": true, "use_colors_file": true, "enable_legacy_logger": false, "partial_parse": true, "static": true, "quiet": false, "introspect": true, "indirect_selection": "eager", "log_path": "/workdir/transforms/01_mpg/logs", "log_level": "info", "profiles_dir": ".", "log_format": "default", "project_dir": "/workdir/transforms/01_mpg", "defer": false, "require_explicit_package_overrides_for_builtin_materializations": true, "compile": true, "log_format_file": "debug", "printer_width": 80, "strict_mode": false, "empty_catalog": false, "which": "generate", "partial_parse_file_diff": true, "warn_error_options": {"include": [], "exclude": []}, "target": "local", "exclude": [], "populate_cache": true, "source_freshness_run_project_hooks": false, "use_colors": true, "vars": {}, "select": [], "show_resource_report": false, "version_check": true, "favor_state": false, "macro_debugging": false, "log_level_file": "debug", "static_parser": true, "print": true, "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "cache_selected_only": false}}